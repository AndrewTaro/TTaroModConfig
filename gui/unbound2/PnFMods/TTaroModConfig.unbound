(def constant TT_ELEMENT_NAME "'ttaroModConfig'")
(def constant TT_CONFIG_WINDOW_WIDTH 360)
(def constant TT_CONFIG_WINDOW_MAXHEIGHT 725)
(def constant TT_ELEMENT_SIZE {
	WIDTH: 50,
	HEIGHT: 30
})

(def constant TT_CONFIG_RENDERER_ELEMENTS {
	TITLE:			'TT_TT_TitleElement',
	SWITCH:			'TT_SwitchOption',
	SLIDER_FLOAT:	'TT_SliderOption',
	SLIDER_INT:		'TT_SliderOption',
	DROPDOWN:		'TT_DropdownOption',
})

(def constant TT_CONFIG_LANGUAGES [
	'English',
	'日本語',
])

#[English, Japanese, ]
(def constant TT_CONFIG_LOCALIZATIONS {
	#3D Radar/Hydro
	IDS_3DMOD_CIRCLE_OPACITY:	 				['Circle Opacity', '円の透過度'],
	IDS_3DMOD_CIRCLE_OPACITY_WITH_ENEMY:		['Circle Opacity (With Enemy in Range)', '円の透過度(敵が範囲内に存在)'],
	IDS_3DMOD_DISTANCE_OFFSET:					['"Enemy in Range" Distance Offset', '敵検知の範囲'],
	IDS_3DMOD_READY:							['Ready', '準備完了'],
	IDS_3DMOD_RELOAD:							['Reload', '準備中'],
	IDS_3DMOD_ACTIVE:							['Active', '使用中'],
	IDS_3DMOD_OFFSET:							['Offset (km)', '距離(km)'],

	#3D Radio
	IDS_3DMOD_VISIBILITY:						['Visibility', '視認性'],
	IDS_3DMOD_VISIBLE_ON_ALT:					['Visible only on Alt-key', 'Altキー使用時のみ表示'],
	IDS_3DMOD_LINE_COLOR:						['Line Color', '線の色'],
	IDS_3DMOD_SECTOR_COLOR:						['Sector Color', 'セクターの色'],
	IDS_3DMOD_ANIMATION:						['Animation on Direction Change', '方向変化時のアニメーション'],
	IDS_3DMOD_MAX_BRIGHTNESS:					['Max Brightness', '最大輝度'],
	IDS_3DMOD_OPACITY:							['Opacity', '透過度'],
	IDS_3DMOD_RED:								['Red', '赤'],
	IDS_3DMOD_GREEN:							['Green', '緑'],
	IDS_3DMOD_BLUE:								['Blue', '青'],

	#Regen Monitor
	IDS_RM_BARCOLOR_ALLY:						['Bar Color (Ally)', 'バーの色(味方)'],
	IDS_RM_BARCOLOR_ENEMY:						['Bar Color (Enemy for Observer)', 'バーの色(観戦モードの敵)'],

	#Smoke Marker
	IDS_SM_MARKER_COLOR_MAP:					['Smoke Color on Minimap', '煙幕マーカーの色(ミニマップ)'],

	#Team Panel
	IDS_TP_GENERAL:								['General', '一般'],
	IDS_TP_SHOW_DEAL:							['Show Dead Players', '沈んだプレイヤーを表示'],
	IDS_TP_HEIGHT_OFFSET:						['Height Offset', '表示位置(高さ)'],
	IDS_TP_SIZE_OFFSET:							['Size Scale', 'UIサイズ'],

	IDS_TP_BACKGROUND:							['Background Contrast Panel', '背景コントラスト'],

	IDS_TP_BASIC_INFO:							['Basic Info', '基本情報'],
	IDS_TP_CLAN_NAME:							['Clan Name', 'クランタグ'],
	IDS_TP_CLAN_ICON:							['Clan Icon', 'クランアイコン'],
	IDS_TP_PLAYER_NAME:							['Player Name', 'プレイヤー名'],
	IDS_TP_SHIP_NAME:							['Ship Name', '艦艇名'],
	IDS_TP_TIER:								['Tier', 'Tier'],
	IDS_TP_CLASS_ICON:							['Class Icon', '艦種アイコン'],
	IDS_TP_CLASS_COLOR:							['Class Color', '艦種毎の色'],
	IDS_TP_KILL_COUNT:							['Kill Count', 'キル数'],
	IDS_TP_DETECTION:							['Detection', '発見状況'],
	IDS_TP_BAR_OPAITY:							['Bar Opacity', 'バーの透過度'],

	IDS_TP_SHIP_STATS:							['Ship Stats', '艦艇性能'],

	IDS_TP_SHOW_UNIT:							['Show Units', '単位表示'],
	IDS_TP_RANGE:								['Range', '射程'],
	IDS_TP_RELOAD:								['Reload', '装填'],
	IDS_TP_RATING:								['Rating', 'レーティング'],
	IDS_TP_SURFACE:								['Surface', '水上'],
	IDS_TP_UNDERWATER:							['Underwater', '水中'],
	IDS_TP_AIR:									['Air', '航空'],
	IDS_TP_RADAR:								['Radar', 'レーダー'],
	IDS_TP_HYDRO:								['Hydro', '水中聴音'],

	IDS_TP_ARTILLERY:							['Artillery', '主砲'],
	IDS_TP_TORPEDO:								['Torpedo', '魚雷'],
	IDS_TP_AIR_DEFENSE:							['Anti Air', '対空'],
	IDS_TP_AIR_STRIKE:							['Air Strike/Support', '空襲'],
	IDS_TP_SPEED:								['Speed', '速力'],
	IDS_TP_VISIBILITY:							['Visibility', '被発見距離'],
	IDS_TP_CONSUMABLE_RANGE:					['Consumable Range', '消耗品射程'],
})

(def constant MOD_3DRADAR_CONFIGS [
	{
		sectionTitle: 'IDS_3DMOD_CIRCLE_OPACITY',
		sectionElements: [
			{configTitle: 'IDS_3DMOD_READY',	titleColor: "SC.Ui_styles.SERVICE_COLORS.WHITE",	key: '3dRadarCircleOpacityReady',	renderer: "TT_CONFIG_RENDERER_ELEMENTS.SLIDER_FLOAT", args: {min: 0, max: 10, default: 7.0, step:0.1}},
			{configTitle: 'IDS_3DMOD_RELOAD',	titleColor: "SC.Ui_styles.SERVICE_COLORS.ORANGE",	key: '3dRadarCircleOpacityReload',	renderer: "TT_CONFIG_RENDERER_ELEMENTS.SLIDER_FLOAT", args: {min: 0, max: 10, default: 7.0, step:0.1}},
			{configTitle: 'IDS_3DMOD_ACTIVE',	titleColor: "SC.Ui_styles.SERVICE_COLORS.GREEN",	key: '3dRadarCircleOpacityActive',	renderer: "TT_CONFIG_RENDERER_ELEMENTS.SLIDER_FLOAT", args: {min: 0, max: 10, default: 10.0, step:0.1}},
		]
	},
	{
		sectionTitle: 'IDS_3DMOD_CIRCLE_OPACITY_WITH_ENEMY',
		sectionElements: [
			{configTitle: 'IDS_3DMOD_READY',	titleColor: "SC.Ui_styles.SERVICE_COLORS.WHITE",	key: '3dRadarCircleOpacityReadyWithEnemy',	renderer: "TT_CONFIG_RENDERER_ELEMENTS.SLIDER_FLOAT", args: {min: 0, max: 10.0, default: 7.0, step:0.1}},
			{configTitle: 'IDS_3DMOD_RELOAD',	titleColor: "SC.Ui_styles.SERVICE_COLORS.ORANGE",	key: '3dRadarCircleOpacityReloadWithEnemy',	renderer: "TT_CONFIG_RENDERER_ELEMENTS.SLIDER_FLOAT", args: {min: 0, max: 10.0, default: 7.0, step:0.1}},
			{configTitle: 'IDS_3DMOD_ACTIVE',	titleColor: "SC.Ui_styles.SERVICE_COLORS.GREEN",	key: '3dRadarCircleOpacityActiveWithEnemy',	renderer: "TT_CONFIG_RENDERER_ELEMENTS.SLIDER_FLOAT", args: {min: 0, max: 10.0, default: 10.0, step:0.1}},
		]
	},
	{
		sectionTitle: 'IDS_3DMOD_DISTANCE_OFFSET',
		sectionElements: [
			{configTitle: 'IDS_3DMOD_OFFSET',	titleColor: "SC.Ui_styles.SERVICE_COLORS.WHITE",	key: '3dRadarCircleRangeOffset',	renderer: "TT_CONFIG_RENDERER_ELEMENTS.SLIDER_FLOAT", args: {min: 0, max: 10, default: 2.0, step:0.5}},
		]
	},
])

(def constant MOD_3DHYDRO_CONFIGS [
	{
		sectionTitle: 'IDS_3DMOD_CIRCLE_OPACITY',
		sectionElements: [
			{configTitle: 'IDS_3DMOD_READY',	titleColor: "SC.Ui_styles.SERVICE_COLORS.WHITE",	key: '3dHydroCircleOpacityReady',	renderer: "TT_CONFIG_RENDERER_ELEMENTS.SLIDER_FLOAT", args: {min: 0, max: 10, default: 2.0, step:0.1}},
			{configTitle: 'IDS_3DMOD_RELOAD',	titleColor: "SC.Ui_styles.SERVICE_COLORS.ORANGE",	key: '3dHydroCircleOpacityReload',	renderer: "TT_CONFIG_RENDERER_ELEMENTS.SLIDER_FLOAT", args: {min: 0, max: 10, default: 2.0, step:0.1}},
			{configTitle: 'IDS_3DMOD_ACTIVE',	titleColor: "SC.Ui_styles.SERVICE_COLORS.GREEN",	key: '3dHydroCircleOpacityActive',	renderer: "TT_CONFIG_RENDERER_ELEMENTS.SLIDER_FLOAT", args: {min: 0, max: 10, default: 2.0, step:0.1}},
		]
	},
	{
		sectionTitle: 'IDS_3DMOD_CIRCLE_OPACITY_WITH_ENEMY',
		sectionElements: [
			{configTitle: 'IDS_3DMOD_READY',	titleColor: "SC.Ui_styles.SERVICE_COLORS.WHITE",	key: '3dHydroCircleOpacityReadyWithEnemy',	renderer: "TT_CONFIG_RENDERER_ELEMENTS.SLIDER_FLOAT", args: {min: 0, max: 10.0, default: 2.0, step:0.1}},
			{configTitle: 'IDS_3DMOD_RELOAD',	titleColor: "SC.Ui_styles.SERVICE_COLORS.ORANGE",	key: '3dHydroCircleOpacityReloadWithEnemy',	renderer: "TT_CONFIG_RENDERER_ELEMENTS.SLIDER_FLOAT", args: {min: 0, max: 10.0, default: 2.0, step:0.1}},
			{configTitle: 'IDS_3DMOD_ACTIVE',	titleColor: "SC.Ui_styles.SERVICE_COLORS.GREEN",	key: '3dHydroCircleOpacityActiveWithEnemy',	renderer: "TT_CONFIG_RENDERER_ELEMENTS.SLIDER_FLOAT", args: {min: 0, max: 10.0, default: 5.0, step:0.1}},
		]
	},
	{
		sectionTitle: 'IDS_3DMOD_DISTANCE_OFFSET',
		sectionElements: [
			{configTitle: 'IDS_3DMOD_OFFSET',	titleColor: "SC.Ui_styles.SERVICE_COLORS.WHITE",	key: '3dHydroCircleRangeOffset',	renderer: "TT_CONFIG_RENDERER_ELEMENTS.SLIDER_FLOAT", args: {min: 0, max: 10, default: 2.0, step:0.5}},
		]
	},
])

(def constant MOD_3DRADIO_CONFIGS [
	{
		sectionTitle: 'IDS_3DMOD_VISIBILITY',
		sectionElements: [
			{configTitle: 'IDS_3DMOD_VISIBLE_ON_ALT',	titleColor: "SC.Ui_styles.SERVICE_COLORS.WHITE",	key: '3dRadioVisibleOnAlt',	renderer: "TT_CONFIG_RENDERER_ELEMENTS.SWITCH", args: {default: false}},
		]
	},
	{
		sectionTitle: 'IDS_3DMOD_LINE_COLOR',
		sectionElements: [
			{configTitle: 'IDS_3DMOD_OPACITY',	titleColor: "SC.Ui_styles.SERVICE_COLORS.WHITE",	key: '3dRadioLineOpacity',	renderer: "TT_CONFIG_RENDERER_ELEMENTS.SLIDER_FLOAT", args: {min: 0, max: 10, default: 2.0, step:0.1}},
			{configTitle: 'IDS_3DMOD_RED',		titleColor: "0xFFFF6666",	key: '3dRadioLineColorRed',		renderer: "TT_CONFIG_RENDERER_ELEMENTS.SLIDER_FLOAT", args: {min: 0, max: 10.0, default: 10.0, step:0.1}},
			{configTitle: 'IDS_3DMOD_GREEN',		titleColor: "0xFF66FF66",	key: '3dRadioLineColorGreen',	renderer: "TT_CONFIG_RENDERER_ELEMENTS.SLIDER_FLOAT", args: {min: 0, max: 10.0, default: 10.0, step:0.1}},
			{configTitle: 'IDS_3DMOD_BLUE',		titleColor: "0xFF6666FF",	key: '3dRadioLineColorBlue',	renderer: "TT_CONFIG_RENDERER_ELEMENTS.SLIDER_FLOAT", args: {min: 0, max: 10.0, default: 10.0, step:0.1}},
		]
	},
	{
		sectionTitle: 'IDS_3DMOD_SECTOR_COLOR',
		sectionElements: [
			{configTitle: 'IDS_3DMOD_OPACITY',	titleColor: "SC.Ui_styles.SERVICE_COLORS.WHITE",	key: '3dRadioSectorOpacity',	renderer: "TT_CONFIG_RENDERER_ELEMENTS.SLIDER_FLOAT", args: {min: 0, max: 10, default: 4.0, step:0.01}},
			{configTitle: 'IDS_3DMOD_RED',		titleColor: "0xFFFF6666",	key: '3dRadioSectorColorRed',	renderer: "TT_CONFIG_RENDERER_ELEMENTS.SLIDER_FLOAT", args: {min: 0, max: 10.0, default: 10.0, step:0.1}},
			{configTitle: 'IDS_3DMOD_GREEN',		titleColor: "0xFF66FF66",	key: '3dRadioSectorColorGreen'	renderer: "TT_CONFIG_RENDERER_ELEMENTS.SLIDER_FLOAT", args: {min: 0, max: 10.0, default: 10.0, step:0.1}},
			{configTitle: 'IDS_3DMOD_BLUE',		titleColor: "0xFF6666FF",	key: '3dRadioSectorColorBlue',	renderer: "TT_CONFIG_RENDERER_ELEMENTS.SLIDER_FLOAT", args: {min: 0, max: 10.0, default: 10.0, step:0.1}},
		]
	},
	{
		sectionTitle: 'IDS_3DMOD_ANIMATION',
		sectionElements: [
			{configTitle: 'IDS_3DMOD_MAX_BRIGHTNESS',	titleColor: "SC.Ui_styles.SERVICE_COLORS.WHITE",	key: '3dRadioAnimationMaxOpacity',	renderer: "TT_CONFIG_RENDERER_ELEMENTS.SLIDER_FLOAT", args: {min: 0, max: 10, default: 2.0, step:1.0}},
		]
	},
])

(def constant MOD_REGENMONITOR_CONFIGS [
	{
		sectionTitle: 'IDS_RM_BARCOLOR_ALLY',
		sectionElements: [
			{configTitle: 'IDS_3DMOD_OPACITY',	titleColor: "SC.Ui_styles.SERVICE_COLORS.WHITE",	key: 'regenMonitorBarOpacityAlly',	renderer: "TT_CONFIG_RENDERER_ELEMENTS.SLIDER_FLOAT", args: {min: 0, max: 10, default: 4.0, step:0.1}},
			{configTitle: 'IDS_3DMOD_RED',		titleColor: "0xFFFF6666",	key: 'regenMonitorBarRedAlly',	renderer: "TT_CONFIG_RENDERER_ELEMENTS.SLIDER_FLOAT", args: {min: 0, max: 10.0, default: 9.0, step:0.1}},
			{configTitle: 'IDS_3DMOD_GREEN',		titleColor: "0xFF66FF66",	key: 'regenMonitorBarGreenAlly',renderer: "TT_CONFIG_RENDERER_ELEMENTS.SLIDER_FLOAT", args: {min: 0, max: 10.0, default: 9.0, step:0.1}},
			{configTitle: 'IDS_3DMOD_BLUE',		titleColor: "0xFF6666FF",	key: 'regenMonitorBarBlueAlly',	renderer: "TT_CONFIG_RENDERER_ELEMENTS.SLIDER_FLOAT", args: {min: 0, max: 10.0, default: 9.0, step:0.1}},
		]
	},
	{
		sectionTitle: 'IDS_RM_BARCOLOR_ENEMY',
		sectionElements: [
			{configTitle: 'IDS_3DMOD_OPACITY',	titleColor: "SC.Ui_styles.SERVICE_COLORS.WHITE",	key: 'regenMonitorBarOpacityEnemy',	renderer: "TT_CONFIG_RENDERER_ELEMENTS.SLIDER_FLOAT", args: {min: 0, max: 10, default: 4.0, step:0.1}},
			{configTitle: 'IDS_3DMOD_RED',		titleColor: "0xFFFF6666",	key: 'regenMonitorBarRedEnemy',		renderer: "TT_CONFIG_RENDERER_ELEMENTS.SLIDER_FLOAT", args: {min: 0, max: 10.0, default: 9.0, step:0.1}},
			{configTitle: 'IDS_3DMOD_GREEN',		titleColor: "0xFF66FF66",	key: 'regenMonitorBarGreenEnemy'	renderer: "TT_CONFIG_RENDERER_ELEMENTS.SLIDER_FLOAT", args: {min: 0, max: 10.0, default: 9.0, step:0.1}},
			{configTitle: 'IDS_3DMOD_BLUE',		titleColor: "0xFF6666FF",	key: 'regenMonitorBarBlueEnemy',	renderer: "TT_CONFIG_RENDERER_ELEMENTS.SLIDER_FLOAT", args: {min: 0, max: 10.0, default: 9.0, step:0.1}},
		]
	},
])

(def constant MOD_SMOKEMARKER_CONFIGS [
	{
		sectionTitle: 'IDS_SM_MARKER_COLOR_MAP',
		sectionElements: [
			{configTitle: 'IDS_3DMOD_OPACITY',	titleColor: "SC.Ui_styles.SERVICE_COLORS.WHITE",	key: 'smokeMarkerMinimapOpacity',	renderer: "TT_CONFIG_RENDERER_ELEMENTS.SLIDER_FLOAT", args: {min: 0, max: 10, default: 4.0, step:0.1}},
			{configTitle: 'IDS_3DMOD_RED',		titleColor: "0xFFFF6666",	key: 'smokeMarkerMinimapRed',	renderer: "TT_CONFIG_RENDERER_ELEMENTS.SLIDER_FLOAT", args: {min: 0, max: 10.0, default: 8.0, step:0.1}},
			{configTitle: 'IDS_3DMOD_GREEN',		titleColor: "0xFF66FF66",	key: 'smokeMarkerMinimapGreen'	renderer: "TT_CONFIG_RENDERER_ELEMENTS.SLIDER_FLOAT", args: {min: 0, max: 10.0, default: 8.0, step:0.1}},
			{configTitle: 'IDS_3DMOD_BLUE',		titleColor: "0xFF6666FF",	key: 'smokeMarkerMinimapBlue',	renderer: "TT_CONFIG_RENDERER_ELEMENTS.SLIDER_FLOAT", args: {min: 0, max: 10.0, default: 8.0, step:0.1}},
		]
	},
])

(def constant MOD_TEAMPANEL_CONFIGS [
	{
		sectionTitle: 'IDS_TP_GENERAL',
		sectionElements: [
			{configTitle: 'IDS_TP_SHOW_DEAL',	titleColor: "SC.Ui_styles.SERVICE_COLORS.WHITE", 	key: 'ttTeamPanelDeadPlayerVisible',renderer: "TT_CONFIG_RENDERER_ELEMENTS.SWITCH", args: {default: true}},
			{configTitle: 'IDS_TP_HEIGHT_OFFSET',	titleColor: "SC.Ui_styles.SERVICE_COLORS.WHITE",	key: 'ttTeamPanelPosOffset',	renderer: "TT_CONFIG_RENDERER_ELEMENTS.SLIDER_FLOAT", args: {min: -5, max: 10, default: 5.0, step:1}},
			{configTitle: 'IDS_TP_SIZE_OFFSET',	titleColor: "SC.Ui_styles.SERVICE_COLORS.WHITE",	key: 'ttTeamPanelScaleOffset',		renderer: "TT_CONFIG_RENDERER_ELEMENTS.SLIDER_FLOAT", args: {min: -5, max: 10, default: 5.0, step:1}},
		]
	},
	{
		sectionTitle: 'IDS_TP_BACKGROUND',
		sectionElements: [
			{configTitle: 'IDS_3DMOD_VISIBLE_ON_ALT',	titleColor: "SC.Ui_styles.SERVICE_COLORS.WHITE",	key: 'ttTeamPanelBlurVisibleOnAlt',	renderer: "TT_CONFIG_RENDERER_ELEMENTS.SWITCH", 		args: {default: false}},
			{configTitle: 'IDS_3DMOD_OPACITY',					titleColor: "SC.Ui_styles.SERVICE_COLORS.WHITE",	key: 'ttTeamPanelBlurOpacity',		renderer: "TT_CONFIG_RENDERER_ELEMENTS.SLIDER_FLOAT", 	args: {min: 0, max: 10, default: 0.0, step:0.1}},
		]
	},
	{
		sectionTitle: 'IDS_TP_BASIC_INFO',
		sectionElements: [
			{configTitle: 'IDS_TP_CLAN_NAME',		key: 'ttTeamPanelClanNameVisible',		titleColor: "SC.Ui_styles.SERVICE_COLORS.WHITE", renderer: "TT_CONFIG_RENDERER_ELEMENTS.SWITCH", args: {default: true}},
			{configTitle: 'IDS_TP_CLAN_ICON',		key: 'ttTeamPanelClanIconVisible',		titleColor: "SC.Ui_styles.SERVICE_COLORS.WHITE", renderer: "TT_CONFIG_RENDERER_ELEMENTS.SWITCH", args: {default: false}},
			{configTitle: 'IDS_TP_PLAYER_NAME',	key: 'ttTeamPanelPlayerNameVisible',	titleColor: "SC.Ui_styles.SERVICE_COLORS.WHITE", renderer: "TT_CONFIG_RENDERER_ELEMENTS.SWITCH", args: {default: true}},
			{configTitle: 'IDS_TP_SHIP_NAME',		key: 'ttTeamPanelShipNameVisible',		titleColor: "SC.Ui_styles.SERVICE_COLORS.WHITE", renderer: "TT_CONFIG_RENDERER_ELEMENTS.SWITCH", args: {default: true}},
			{configTitle: 'IDS_TP_TIER',			key: 'ttTeamPanelShipTierVisible',		titleColor: "SC.Ui_styles.SERVICE_COLORS.WHITE", renderer: "TT_CONFIG_RENDERER_ELEMENTS.SWITCH", args: {default: true}},
			{configTitle: 'IDS_TP_CLASS_ICON',		key: 'ttTeamPanelShipIconVisible',		titleColor: "SC.Ui_styles.SERVICE_COLORS.WHITE", renderer: "TT_CONFIG_RENDERER_ELEMENTS.SWITCH", args: {default: true}},
			{configTitle: 'IDS_TP_CLASS_COLOR',	key: 'ttTeamPanelShipIconColorPreset',	titleColor: "SC.Ui_styles.SERVICE_COLORS.WHITE", renderer: "TT_CONFIG_RENDERER_ELEMENTS.DROPDOWN", args: {items:['None', 'Aslain v1', 'Aslain v2', 'AutoSpy', 'Roslich', 'DeCease', 'Hakabase'], default: 0}},
			{configTitle: 'IDS_TP_KILL_COUNT',		key: 'ttTeamPanelPlayerKillsVisible',	titleColor: "SC.Ui_styles.SERVICE_COLORS.WHITE", renderer: "TT_CONFIG_RENDERER_ELEMENTS.SWITCH", args: {default: true}},
			{configTitle: 'IDS_TP_DETECTION',		key: 'ttTeamPanelShipDetectionVisible',	titleColor: "SC.Ui_styles.SERVICE_COLORS.WHITE", renderer: "TT_CONFIG_RENDERER_ELEMENTS.SWITCH", args: {default: true}},
			{configTitle: 'IDS_TP_BAR_OPAITY',	key: 'ttTeamPanelHealthBarOpacity',		titleColor: "SC.Ui_styles.SERVICE_COLORS.WHITE", renderer: "TT_CONFIG_RENDERER_ELEMENTS.SLIDER_FLOAT", args: {min: 0, max: 10, default: 4.0, step:0.1}},
		]
	},
	{
		sectionTitle: 'IDS_TP_SHIP_STATS',
		sectionElements: [
			{configTitle: 'IDS_3DMOD_VISIBLE_ON_ALT',	key: 'ttTeamPanelShipStatsVisibleOnAlt',	titleColor: "SC.Ui_styles.SERVICE_COLORS.WHITE", renderer: "TT_CONFIG_RENDERER_ELEMENTS.SWITCH", args: {default: false}},
			{configTitle: 'IDS_TP_SHOW_UNIT',					key: 'ttTeamPanelShipStatsUnitsVisible',	titleColor: "SC.Ui_styles.SERVICE_COLORS.WHITE", renderer: "TT_CONFIG_RENDERER_ELEMENTS.SWITCH", args: {default: true}},
		]
	},
	{
		sectionTitle: 'IDS_TP_ARTILLERY',
		sectionElements: [
			{configTitle: 'IDS_TP_RANGE',			key: 'ttTeamPanelArtilleryRangeVisible', titleColor: "SC.Ui_styles.SERVICE_COLORS.WHITE", renderer: "TT_CONFIG_RENDERER_ELEMENTS.SWITCH", args: {default: true}},
			{configTitle: 'IDS_TP_RELOAD',			key: 'ttTeamPanelArtilleryReloadVisible',titleColor: "SC.Ui_styles.SERVICE_COLORS.WHITE", renderer: "TT_CONFIG_RENDERER_ELEMENTS.SWITCH", args: {default: true}},
		]
	},
	{
		sectionTitle: 'IDS_TP_TORPEDO',
		sectionElements: [
			{configTitle: 'IDS_TP_RANGE',			key: 'ttTeamPanelTorpedoRangeVisible',	titleColor: "SC.Ui_styles.SERVICE_COLORS.WHITE", renderer: "TT_CONFIG_RENDERER_ELEMENTS.SWITCH", args: {default: true}},
			#{configTitle: 'IDS_TP_RELOAD',			key: 'ttTeamPanelTorpedoReloadVisible',	titleColor: "SC.Ui_styles.SERVICE_COLORS.WHITE", renderer: "TT_CONFIG_RENDERER_ELEMENTS.SWITCH", args: {default: true}},
		]
	},
	{
		sectionTitle: 'IDS_TP_AIR_DEFENSE',
		sectionElements: [
			{configTitle: 'IDS_TP_RANGE',			key: 'ttTeamPanelAntiAirRangeVisible',	titleColor: "SC.Ui_styles.SERVICE_COLORS.WHITE", renderer: "TT_CONFIG_RENDERER_ELEMENTS.SWITCH", args: {default: true}},
			{configTitle: 'IDS_TP_RATING',			key: 'ttTeamPanelAntiAirRateVisible',	titleColor: "SC.Ui_styles.SERVICE_COLORS.WHITE", renderer: "TT_CONFIG_RENDERER_ELEMENTS.SWITCH", args: {default: true}},
		]
	},
	{
		sectionTitle: 'IDS_TP_AIR_STRIKE',
		sectionElements: [
			{configTitle: 'IDS_TP_RANGE',			key: 'ttTeamPanelAirSupportRangeVisible',titleColor: "SC.Ui_styles.SERVICE_COLORS.WHITE", renderer: "TT_CONFIG_RENDERER_ELEMENTS.SWITCH", args: {default: true}},
			{configTitle: 'IDS_TP_RELOAD',			key: 'ttTeamPanelAirSupportReloadVisible',titleColor: "SC.Ui_styles.SERVICE_COLORS.WHITE", renderer: "TT_CONFIG_RENDERER_ELEMENTS.SWITCH", args: {default: true}},
		]
	},
	{
		sectionTitle: 'IDS_TP_SPEED',
		sectionElements: [
			{configTitle: 'IDS_TP_SURFACE',		key: 'ttTeamPanelSpeedSurfaceVisible',	titleColor: "SC.Ui_styles.SERVICE_COLORS.WHITE", renderer: "TT_CONFIG_RENDERER_ELEMENTS.SWITCH", args: {default: true}},
			{configTitle: 'IDS_TP_UNDERWATER',		key: 'ttTeamPanelSpeedUnderwaterVisible',titleColor: "SC.Ui_styles.SERVICE_COLORS.WHITE", renderer: "TT_CONFIG_RENDERER_ELEMENTS.SWITCH", args: {default: true}},
		]
	},
	{
		sectionTitle: 'IDS_TP_VISIBILITY',
		sectionElements: [
			{configTitle: 'IDS_TP_SURFACE',		key: 'ttTeamPanelVisibilitySurfaceVisible',titleColor: "SC.Ui_styles.SERVICE_COLORS.WHITE", renderer: "TT_CONFIG_RENDERER_ELEMENTS.SWITCH", args: {default: true}},
			{configTitle: 'IDS_TP_AIR',			key: 'ttTeamPanelVisibilityAirVisible',	titleColor: "SC.Ui_styles.SERVICE_COLORS.WHITE", renderer: "TT_CONFIG_RENDERER_ELEMENTS.SWITCH", args: {default: true}},
		]
	},
	{
		sectionTitle: 'IDS_TP_CONSUMABLE_RANGE',
		sectionElements: [
			{configTitle: 'IDS_TP_HYDRO',		key: 'ttTeamPanelHydroRangeVisible',	titleColor: "SC.Ui_styles.SERVICE_COLORS.WHITE", renderer: "TT_CONFIG_RENDERER_ELEMENTS.SWITCH", args: {default: true}},
			{configTitle: 'IDS_TP_RADAR',		key: 'ttTeamPanelRadarRangeVisible',	titleColor: "SC.Ui_styles.SERVICE_COLORS.WHITE", renderer: "TT_CONFIG_RENDERER_ELEMENTS.SWITCH", args: {default: true}},
		]
	},
])

(def constant MOD_CONSUMABLESMONITOR_CONFIGS [

])

#TODO: should get actual numbers from py code
(def constant MOD_MODULESTATEVIEWER_CONFIGS [

])


(def constant TT_MODS_CONFIG_LIST [
	{modName: '3D Radar',				configSections: "MOD_3DRADAR_CONFIGS", 		isInstalled: "TT_3DRADAR_INSTALLED"},
	{modName: '3D Hydro',				configSections: "MOD_3DHYDRO_CONFIGS", 		isInstalled: "TT_3DHYDRO_INSTALLED"},
	{modName: '3D Radio',				configSections: "MOD_3DRADIO_CONFIGS",		isInstalled: "TT_3DRADIO_INSTALLED"},
	{modName: 'Regen Monitor',			configSections: "MOD_REGENMONITOR_CONFIGS", isInstalled: "TT_REGENMONITOR_INSTALLED"},
	{modName: 'Smoke Marker',			configSections: "MOD_SMOKEMARKER_CONFIGS",	isInstalled: "TT_SMOKEMARKER_INSTALLED"},
	{modName: 'Team Panel',				configSections: "MOD_TEAMPANEL_CONFIGS",	isInstalled: "TT_TEAMPANEL_INSTALLED"},
])

	#{modName: 'Consumables Monitor',	configSections: "MOD_CONSUMABLESMONITOR_CONFIGS"},
	#{modName: 'Module State Viewer',	configSections: "MOD_MODULESTATEVIEWER_CONFIGS"},

(def element TTaroModConfig() layout=true
	(scope
		(var defaultPos:dict = "{'positionX': 200, 'positionY': 0}")
		(macro DRAGGABLE_GET_DROP_POSITION _wndName="TT_ELEMENT_NAME" _defaults="defaultPos")
	)

	(block
		(style
			(position = absolute)
			(bind left "drogPosX")
			(bind top "drogPosY")
			(width = "TT_ELEMENT_SIZE.WIDTH")
			(height = "TT_ELEMENT_SIZE.HEIGHT")
		)
		(element ModDraggableElement _wndName="TT_ELEMENT_NAME" _defaults="defaultPos" _elmSize="{width: TT_ELEMENT_SIZE.WIDTH, height: TT_ELEMENT_SIZE.HEIGHT}")
		(hblock
			(align = "middle|center")
			(element TT_OptionButton)
			(element TT_DragTitleElement)
		)
	)
)

(def element TT_OptionButton () layout=true
	(scope
		(event evHideInfotip)
		(event evOnButtonClicked)

		(var mouse:gfx = "$datahub.getSingleComponent(CC.mouse)")
		(var isMouseActive:bool = "mouse.active" (event "mouse.evActiveChanged"))

		(var infotipVisible:bool = false)
		(macro TT_GET_UPREFS)
	)
	(dispatch evHideInfotip args="{}" (bind trigger "isMouseActive"))

	(controller $Tooltip
		(renderer='TT_ModConfigs')
		(args _userPrefsNum = "_userPrefsNum")
		(bindcall show animation={duration:0.1, easing:"Easing.cubic_in", from:{alpha:1}, to:{alpha:1}} (event "evOnButtonClicked"))
		(bindcall hide animation={duration:0.1, easing:"Easing.cubic_out", from:{alpha:1}, to:{alpha:0}} on='evClickOutside' (event "evHideInfotip"))
		(bind infotipVisible "true" init=false on='evShow')
		(bind infotipVisible "false" init=false on='evHide')
		(priority=1)
		(macro MINIMAP_TOOLTIP_COMMON_PARAMS)
	)

	(style
		(width = 30)
		(height = 30)
	)
	
	(element ButtonSettingsSmall
		(style
			(position = "absolute")
			(left = "3px")
			(top = "3px")
			(bind alpha "isMouseActive ? 1.0 : 0.4")
		)
	)
)

(def element TT_ModConfigs (_userPrefsNum:dict=null)layout=true
	(scope
		(event evTabClicked)
		(var selectedIndex:number = "-1")
		(bind selectedIndex "$event.index" init=false (event "evTabClicked"))

		(var languageOptions:dict = "{items: TT_CONFIG_LANGUAGES, default: 0}")
	)

	(style 
		(align = "middle|center")
		(width=364)
	)

	(element InfotipSystemBlur)

	(mc contrast_panel
		(class $FullsizeAbsolute)
		(style
			(alpha = "0.4")
			(hitTest = "true")
		)
	)

	#Tab Buttons
	(block
		(style
			(align = "middle|center")
			(height = "40px")
			(marginLeft = 80px)
		)
		(element TT_DropdownOption _prefKey="TT_ELEMENT_NAME + 'Language'" _args="languageOptions" _userPrefsNum="_userPrefsNum")
	)
	(hblock
		(style
			(flow = "Flow.TILE_HORIZONTAL")
			(width="TT_CONFIG_WINDOW_WIDTH")
			(align="center")
		)
		(controller $Repeat renderer='SecondaryTabButton'
			(bind count "TT_MODS_CONFIG_LIST.length")
			(args
				_label="TT_MODS_CONFIG_LIST[$index].modName"
				_isSelected="$index == selectedIndex"
				_width="120px"
				_dispatchedEv="'evTabClicked'"
				_dispatchParams="{index: $index}"
				_name="'TTaroModConfigTabButton' + TT_MODS_CONFIG_LIST[$index].modName"
				_isDisabled="!TT_MODS_CONFIG_LIST[$index].isInstalled"
			)
		)
	)

	#Config Elements
	#DO NOT USE PEPEAT!: IT freezes the screen as the number of elements increases
	#(element TT_ModElement "TT_MODS_CONFIG_LIST[selectedIndex]" _userPrefsNum="_userPrefsNum")
	(controller $Instance (renderer='TT_ModElement')
		(bindcall recreate (bind trigger "selectedIndex"))
		(args
			"TT_MODS_CONFIG_LIST[selectedIndex]" _userPrefsNum="_userPrefsNum"
		)
	)
)

(def element TT_ModElement (modConfigsData:dict, _userPrefsNum:dict=null)layout=true
	(scope
		(macro MOUSE_HANDLER_SCOPE) #THIS IS MANDATORY FOR SCROLL IN BATTLE
	)
	(style
		(align = "middle|center")
		(width="TT_CONFIG_WINDOW_WIDTH")
		(marginBottom = 15px)
		#(maxHeight = 800)
	)

	(controller $Animation
		(bindcall play duration="0.25"  from={alpha:0} to={alpha:1} watch=false action="killAll" easing="Easing.cubic_in" (bind trigger "modConfigsData"))
	)

	#THIS IS MANDATORY FOR SCROLL IN BATTLE
	(bindcall externalCall 'inputMapping.onAction' "['battleChat.rollOverChanged', { rollOver: rollOver }]" init=false watch=false (bind trigger "rollOver"))
	(macro MOUSE_EVENTS_DISPATCHER)
	#THIS IS MANDATORY FOR SCROLL IN BATTLE

	(scrollArea
		(style
			(backgroundColor = 0x01000000) #THIS IS MANDATORY FOR SCROLL IN BATTLE
			(width = "TT_CONFIG_WINDOW_WIDTH")
			(maxHeight = "TT_CONFIG_WINDOW_MAXHEIGHT")
		)

		(verticalSlider='ScrollBarVLight')
		(topShadow='ScrollAreaShadowTop')
		(bottomShadow='ScrollAreaShadowBottom')

		(activeControlsAlpha=0.7)
		(inactiveControlsAlpha=0.2)
		
		(wheelScrollSpeed = "1.5")
		(wheelScrollAcceleration = "0.9")
		(maxScrollingAnimatedDistance = "150")

		(animationDuration=0.2)
		(animationEasing="Easing.cubic_out")

		(hscrollPolicy='off')
		(vscrollPolicy='auto')
		(repeatController='TT_SectionElementRepeat')

		(content
			(style
				(width = "TT_CONFIG_WINDOW_WIDTH")
			)

			(controller $Repeat renderer='TT_SectionElement' name='TT_SectionElementRepeat'
				(bind count "modConfigsData.configSections.length")
				(args "modConfigsData.configSections[$index]" _userPrefsNum="_userPrefsNum")
			)
		)
	)
)

(def element TT_SectionElement (sectionData:dict, _userPrefsNum:dict=null) layout=true
	(scope
		(var isSectionEnabled:bool = false)

		(controller $Animation		
			(bindcall play
				delay = "$index * 0.1"
				duration = "0.001"
				from	 = "{ isSectionEnabled: false }"
				to		 = "{ isSectionEnabled: true }"
				init	 = true
			)
		)
	)

	(bind visible "isSectionEnabled")

	(style
		(align = "middle|center")
		(width=100%)
		(marginBottom = 15px)
		(bind marginTop "$index == 0 ? 10px : 0")
	)

	(element TT_SectionTitleElement "sectionData" _userPrefsNum="_userPrefsNum")

	(macro TT_HorizontalDeviderShort)

	#Instance recreate is needed to solve the issue where text field size does not get updated when the internal data is changed
	(controller $Repeat layout=true #renderer='TT_ConfigElement'
		(bind count "sectionData.sectionElements.length")
		#(args "sectionData.sectionElements[$index]" _userPrefsNum="_userPrefsNum")
		(exprs
			(controller $Instance (renderer='TT_ConfigElement')
				(bind enabled "isSectionEnabled")
				(args
					"sectionData.sectionElements[$index]" _userPrefsNum="_userPrefsNum"
				)
				#(bindcall recreate (bind trigger "sectionData"))
			)
		)
	)
)

(def element TT_ConfigElement (configData:dict, _userPrefsNum:dict=null)layout=true
	(style
		(alpha = 0)
	)
	(controller $Animation
		(bindcall play
			delay = "$index * 0.02"
			duration = "0.2"
			from = "{ alpha: 0 }"
			to = "{ alpha: 1 }"
			init = "true"
		)
	)
	(hblock
		(style
			(align = "middle|center")
			#(width = 100%) it breaks layout for some reason
			(marginBottom = 4px)
			(marginTop = 4px)
		)

		(element TT_ConfigTitleElement "configData" _userPrefsNum="_userPrefsNum")

		(controller $Instance
			(bind renderer "configData.renderer")
			(args
				_prefKey="configData.key"
				_args="configData.args"
				_userPrefsNum="_userPrefsNum"
			)
		)
	)
)

(def element TT_DragTitleElement () layout=true
	(scope
		(var mouse:gfx = "$datahub.getSingleComponent(CC.mouse)")
		(var isMouseActive:bool = "mouse.active" (event "mouse.evActiveChanged"))
	)
	(tf
		(class $TextDefaultBold)
		(bind text "'T'")
		(style
			(bind alpha "isMouseActive ? 0.6 : 0.0")
			(hitTest = false)
			(fontSize = 18)
		)
	)
)

(def element TT_SectionTitleElement (_data:dict, _userPrefsNum:dict=null) layout=true
	(scope
		(var titleText:str = "_data.sectionTitle")
		(var languagePrefKey:str = "TT_ELEMENT_NAME + 'Language'")
		(var languageIndex:number = "(_userPrefsNum && languagePrefKey in _userPrefsNum) ? round(_userPrefsNum[languagePrefKey]) : 0")
		(var titleColor:number = "'titleColor' in _data ? _data.titleColor : 0xFFFFFF")
		(var localizedTitleText:str = "TT_CONFIG_LOCALIZATIONS[titleText][languageIndex]")
	)
	(tf
		(class $TextDefaultBold)
		(bind text "localizedTitleText")
		(style
			(fontSize = 18)
			(bind textColor "titleColor")
		)
	)
)

(def element TT_ConfigTitleElement (_data:dict, _userPrefsNum:dict=null) layout=true
	(scope
		(var titleText:str = "_data.configTitle")
		(var languagePrefKey:str = "TT_ELEMENT_NAME + 'Language'")
		(var languageIndex:number = "(_userPrefsNum && languagePrefKey in _userPrefsNum) ? round(_userPrefsNum[languagePrefKey]) : 0")
		(var titleColor:number = "'titleColor' in _data ? _data.titleColor : 0xFFFFFF")
		(var localizedTitleText:str = "TT_CONFIG_LOCALIZATIONS[titleText][languageIndex]")
	)
	(tf
		(bind text "localizedTitleText")
		(class $TextDefaultNM)
		(style
			(width = 80)
			(leading = -4)
			(bind textColor "titleColor")
		)
	)
)

(def element TT_SwitchOption (_prefKey:str, _args:dict, _userPrefsNum:dict=null) layout=true
	(scope
		#(macro TT_GET_UPREFS)
		(var prefKey:str = "_prefKey")
		(var defaultValue:number = "'default' in _args ? _args.default : false")
		(var prefValue:number = "prefKey in _userPrefsNum ? round(_userPrefsNum[prefKey]) : defaultValue")
		(var resetMethods:array = "[{type: 'inputMapping.onAction', name: 'setUserPref', args: {'value': toNumber(defaultValue) + 0.00001, 'name': 'chatBoxWidth', 'subName': prefKey}}]")
		(var saveMethods:array = "[{type: 'inputMapping.onAction', name: 'setUserPref', args: {'value': toNumber(!prefValue) + 0.00001, 'name': 'chatBoxWidth', 'subName': prefKey}}]")
	)

	(hblock
		(style
			(width = "200px")
			(height = "23px")
			(align = "left|middle")
		)
		(element SwitchWithoutLabel
			_state = "prefValue"
			_methods = "saveMethods"
			(style
				(width = 185)
				(paddingLeft = 25%)
			)
		)

		(controller $Instance renderer='ImageButton'
			(bind enabled "prefValue != defaultValue")
			(args
				_width = 18
				_height = 18
				_backgroundImage = 'url:../service_kit/buttons/context/update.png'
				_tooltipText = "'IDS_PREFERENCES_CONTEXT_PREF_RESET'"
				_methods = "resetMethods"
			)
		)
	)
)

(def element TT_SliderOption (_prefKey:str, _args:dict, _userPrefsNum:dict=null) layout=true
	(scope
		(event evSliderValueChanged) #slider event
		(event evValueReset) #image button event
		(event evReinitialized) #Element is being reused while the contents change
		(var prefKey:str = "_prefKey")
		(var defaultValue:number = "'default' in _args ? _args.default : 0")
		(var minValue:number = "'min' in _args ? _args.min : 0")
		(var maxValue:number = "'max' in _args ? _args.max : 10")
		(var step:number = "'step' in _args ? _args.step : 1")
		#watch=false is necessary to prevent the flickering slider
		(var prefValue:number = "prefKey in _userPrefsNum ? round(_userPrefsNum[prefKey]) : defaultValue" watch=false (event "evReinitialized"))
		(bind prefValue "$event.value" watch=false init=false (event "evValueReset")(event "evSliderValueChanged"))
		(var displayedCount:str = "formatFloatingPoint(minValue + prefValue * step, 2)")
	)

	#(dispatch evReinitialized (bind trigger "prefKey"))
	#_prefKey changes before _arg, resulting in an incorrect defaultValue
	(dispatch evReinitialized (bind trigger "_args"))
	(bindcall externalCall 'inputMapping.onAction' "['setUserPref', {'value': $event.value + 0.00001, 'name': 'chatBoxWidth', 'subName': prefKey}]" init=false watch=false (event "evSliderValueChanged")(event "evValueReset"))

	(hblock
		(style
			(width = "200px")
			(height = "23px")
			(align = "left|middle")
		)
		(element DefaultSlider
			_value = "prefValue"
			_intervalsCount = "maxValue"
			_unitsInStepInterval = "step"
			_width = 140
		)
		(tf
			(class $TextDefault)
			(alpha = "TA")
			(bind text "displayedCount")
			(style
				(marginLeft = 5px)
				(width = 40px)
			)
		)
		(block
			(bind visible "prefValue != defaultValue")
			(controller $Instance renderer='ImageButton'
				(args
					_width = 18
					_height = 18
					_backgroundImage = 'url:../service_kit/buttons/context/update.png'
					_tooltipText = "'IDS_PREFERENCES_CONTEXT_PREF_RESET'"
					_dispatchedEv = "'evValueReset'"
					_dispatchParams = "{'value': defaultValue}"
				)
			)
		)
	)
)

(def element TT_DropdownOption (_prefKey:str, _args:dict, _userPrefsNum:dict=null) layout=true
	(scope
		(event ItemChooser_ValueSelected)
		(event evMenuClosed) #To close dropdown menu when parent tooltip is closed

		(var prefKey:str = "_prefKey")
		(var defaultValue:number = "'default' in _args ? _args.default : 0")
		(var items:array = "'items' in _args ? _args.items : []")
		(var prefValue:number = "prefKey in _userPrefsNum ? round(_userPrefsNum[prefKey]) : defaultValue")
		(var resetMethods:array = "[{type: 'inputMapping.onAction', name: 'setUserPref', args: {'value': defaultValue + 0.00001, 'name': 'chatBoxWidth', 'subName': prefKey}}]")
	)

	(bindcall externalCall 'inputMapping.onAction' "['setUserPref', {'value': $event.selectedIndex + 0.00001, 'name': 'chatBoxWidth', 'subName': prefKey}]" init=false watch=false (event "ItemChooser_ValueSelected"))
	(dispatch evMenuClosed dir="EventDirection.DOWN" args="{}" on='removedFromStage') #To close dropdown menu when parent tooltip is closed

	(hblock
		(style
			(width = "200px")
			(height = "23px")
			(align = "left|middle")
		)

		(element ItemChooser
			_items = "items"
			_listItemRenderer = "'TextListItemRenderer'"
			_choosedItemRenderer = "'DefaultItemChooserPickedItemRenderer'"
			_onItemSelectedEvent = "'ValueSelected'"
			_selectedMaxWidth = "200"
			_dropDownWidth = "200"
			_maxDropDownHeight = "300"
			_curIndex = "prefValue"
			(style
				(width = 150px)
				(marginRight = 35px)
				(align = "middle|center")
			)
		)

		(controller $Instance renderer='ImageButton'
			(bind enabled "prefValue != defaultValue")
			(args
				_width = 18
				_height = 18
				_backgroundImage = 'url:../service_kit/buttons/context/update.png'
				_tooltipText = "'IDS_PREFERENCES_CONTEXT_PREF_RESET'"
				_methods = "resetMethods"
			)
		)
	)
)

(def macro TT_HorizontalDeviderShort() layout=true
	(element HorizontalDivider
		(style
			(paddingLeft = 40)
			(paddingRight = 40)
			(marginTop = 5px)
			(marginBottom = 5px)
			(alpha = 2)
		)
	)
)

(def macro TT_GET_UPREFS ()
	(var userPrefsComponent:gfx = "$datahub.getSingleComponent(CC.userPrefs)")
	(var _userPrefsNum:dict = "userPrefsComponent.userPrefs.chatBoxWidth" (event "userPrefsComponent.evUserPrefsChanged"))
)